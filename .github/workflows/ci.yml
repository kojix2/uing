name: test

on:
  push:
  pull_request:
  schedule:
    - cron: "51 3 * * 6" # Runs at 03:51, only on Saturday
  workflow_dispatch:
jobs:
  build:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest", "macos-13"]
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: true
      - uses: crystal-lang/install-crystal@v1
        with:
          crystal: latest
      - if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libgtk-3-dev
      - if: ${{ matrix.os == 'windows-latest' }}
        name: Add Windows SDK to PATH
        run: |
          $sdkPath = Get-ChildItem "C:\Program Files (x86)\Windows Kits\10\bin" -Directory | Sort-Object Name -Descending | Select-Object -First 1
          echo "$($sdkPath.FullName)\x64" >> $env:GITHUB_PATH
        shell: pwsh
      - name: Install dependencies
        run: shards install
      - name: Download libui library
        run: |
          crystal run download.cr
          ls libui
      - name: Run tests
        run: crystal spec
      - name: Build all examples (Ubuntu)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          ls examples/*.cr | xargs -P 0 -I {} crystal build {}
          ls
      - name: Build all examples (macOS)
        if: ${{ matrix.os == 'macos-latest' || matrix.os == 'macos-13' }}
        run: |
          ls examples/*.cr | xargs -n 1 crystal build
          ls
      - name: Build all examples (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          Get-ChildItem -Path examples -Filter *.cr | ForEach-Object { crystal build $_.FullName }
          ls

  build_Aarch64:
    name: Aarch64
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-22.04-arm", "ubuntu-24.04-arm"]
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: true
      - name: Install crystal
        run: |
          curl -fsSL https://packagecloud.io/84codes/crystal/gpgkey | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/84codes_crystal.gpg > /dev/null
          . /etc/os-release
          echo "deb https://packagecloud.io/84codes/crystal/$ID $VERSION_CODENAME main" | sudo tee /etc/apt/sources.list.d/84codes_crystal.list
          sudo apt-get update -y
          sudo apt-get install -y crystal
      - name: Install system dependencies
        run: |
          sudo apt-get install -y libgtk-3-dev
      - name: Install Crystal dependencies
        run: shards install
      - name: Download libui library
        run: |
          crystal run download.cr
          ls libui
      - name: Run tests
        run: crystal spec
      - name: Build all examples (Ubuntu)
        run: |
          ls examples/*.cr | xargs -P 0 -I {} crystal build {}
          ls

  build_MinGW64:
    name: MinGW64
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: true
      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            mingw-w64-x86_64-crystal
            mingw-w64-x86_64-shards
            git
      - name: Install dependencies
        shell: msys2 {0}
        run: shards install
      - name: Download libui library
        shell: msys2 {0}
        run: |
          crystal run download.cr
          ls libui
      - name: Run tests
        shell: msys2 {0}
        run: crystal spec
      - name: Build all examples
        shell: msys2 {0}
        run: |
          for f in examples/*.cr; do crystal build "$f"; done
          ls -l
