name: Screenshot Tests

on:
  workflow_dispatch:

jobs:
  screenshot:
    name: ${{ matrix.os }} Screenshot
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - os: ubuntu
            runner: ubuntu-latest
            setup-display: true
          - os: windows
            runner: windows-latest
            setup-display: false
          - os: macos
            runner: macos-latest
            setup-display: false

    env:
      DISPLAY: ${{ matrix.setup-display && ':99' || '' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          submodules: true

      - name: Install Crystal
        uses: crystal-lang/install-crystal@v1
        with:
          crystal: latest

      - name: Install Ubuntu dependencies
        if: matrix.os == 'ubuntu'
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libgtk-3-dev xvfb imagemagick xdotool openbox wmctrl

      - name: Setup Windows SDK
        if: matrix.os == 'windows'
        run: echo "C:\Program Files (x86)\Windows Kits\10\bin\10.0.19041.0\x64" >> $env:GITHUB_PATH

      - name: Install Crystal dependencies
        run: shards install

      - name: Download libui library
        run: |
          crystal run download.cr
          ${{ matrix.os == 'windows' && 'Get-ChildItem libui' || 'ls -la libui/' }}

      - name: Build all controls (Linux/macOS)
        if: matrix.os != 'windows'
        shell: bash
        run: |
          for f in examples/controls/*.cr; do
            name=$(basename "$f" .cr)
            crystal build "$f" -o "$name"
          done

      - name: Build all controls (Windows)
        if: matrix.os == 'windows'
        shell: pwsh
        run: |
          Get-ChildItem examples/controls/*.cr | ForEach-Object {
            $name = $_.BaseName
            crystal build $_.FullName -o $name
          }

      - name: Take screenshots for all controls
        uses: ./.github/actions/screenshot
        with:
          os: ${{ matrix.os }}
          app-names: "basic_button basic_checkbox basic_color_button basic_combobox basic_date_time_picker basic_editable_combobox basic_entry basic_font_button basic_label basic_progressbar basic_radio_buttons basic_separator basic_slider basic_spinbox basic_tab"
          output-files: "basic_button-${{ matrix.os }}.png basic_checkbox-${{ matrix.os }}.png basic_color_button-${{ matrix.os }}.png basic_combobox-${{ matrix.os }}.png basic_date_time_picker-${{ matrix.os }}.png basic_editable_combobox-${{ matrix.os }}.png basic_entry-${{ matrix.os }}.png basic_font_button-${{ matrix.os }}.png basic_label-${{ matrix.os }}.png basic_progressbar-${{ matrix.os }}.png basic_radio_buttons-${{ matrix.os }}.png basic_separator-${{ matrix.os }}.png basic_slider-${{ matrix.os }}.png basic_spinbox-${{ matrix.os }}.png basic_tab-${{ matrix.os }}.png"

      - name: Upload screenshots
        uses: actions/upload-artifact@v4
        with:
          name: screenshots-${{ matrix.os }}
          path: "*.png"
          retention-days: 30

  push_screenshots:
    name: Push all screenshots to orphan branch
    needs: screenshot
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          submodules: true

      - name: Download all screenshots artifacts
        uses: actions/download-artifact@v5
        with:
          path: screenshots

      - name: Prepare orphan branch
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git fetch origin screenshots || true
          git checkout --orphan screenshots || git checkout screenshots
          find . -mindepth 1 ! -regex '^./\.git\(/.*\)?' -delete
          find screenshots -name "*.png" -exec cp {} . \;
          if [ -f gallery.md ]; then cp gallery.md .; fi
          git status
          git add *.png
          if [ -f gallery.md ]; then git add gallery.md; fi
          git status
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update screenshots [skip ci]"
            git push -f origin screenshots
          fi
